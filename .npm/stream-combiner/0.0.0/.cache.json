{"name":"stream-combiner","version":"0.0.0","homepage":"https://github.com/dominictarr/stream-combiner","repository":{"type":"git","url":"git://github.com/dominictarr/stream-combiner.git"},"dependencies":{"duplexer":"0.0.2"},"devDependencies":{"tape":"0.0.4","event-stream":"~3.0.7"},"scripts":{"test":"set -e; for t in test/*.js; do node $t; done"},"author":{"name":"'Dominic Tarr'","email":"dominic.tarr@gmail.com","url":"http://dominictarr.com"},"license":"MIT","_id":"stream-combiner@0.0.0","description":"<img src=https://secure.travis-ci.org/dominictarr/stream-combiner.png?branch=master>","dist":{"shasum":"250ec42c28bb1cda6250f533e4e41b235587162c","size":2271,"noattachment":false,"tarball":"http://registry.npm.taobao.org/stream-combiner/download/stream-combiner-0.0.0.tgz"},"_npmVersion":"1.1.65","_npmUser":{"name":"dominictarr","email":"dominic.tarr@gmail.com"},"maintainers":[{"name":"dominictarr","email":"dominic.tarr@gmail.com"}],"directories":{},"readme":"# stream-combiner\n\n<img src=https://secure.travis-ci.org/dominictarr/stream-combiner.png?branch=master>\n\n## Combine (stream1,...,streamN)\n\nTurn a pipeline into a single stream. `pipeline` returns a stream that writes to the first stream\nand reads from the last stream. \n\nListening for 'error' will recieve errors from all streams inside the pipe.\n\n``` js\n  var Combine = require('stream-combiner')\n  var es      = require('event-stream')\n\n  Combine(                         //connect streams together with `pipe`\n    process.openStdin(),              //open stdin\n    es.split(),                       //split stream to break on newlines\n    es.map(function (data, callback) {//turn this async function into a stream\n      callback(null\n        , inspect(JSON.parse(data)))  //render it nicely\n    }),\n    process.stdout                    // pipe it to stdout !\n    )\n```\n\n## License\n\nMIT\n","publish_time":1354001089721,"_cnpm_publish_time":1354001089721,"_etag":"\"7a6-0L1G43DdAe60s7tnjfOHTg\""}